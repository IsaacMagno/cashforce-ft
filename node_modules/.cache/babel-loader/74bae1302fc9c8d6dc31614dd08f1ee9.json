{"ast":null,"code":"import axios from \"axios\";\nimport moment from \"moment\";\nconst URL = \"http://localhost:3003\";\nexport default {\n  data() {\n    return {\n      ordData: [],\n      orderStatus: [\"Pendente de confirmação\", \"Pedido confirmado\", \"Não reconhece o pedido\", \"Mercadoria não recebida\", \"Recebida com avaria\", \"Devolvida\", \"Recebida com devolução parcial\", \"Recebida e confirmada\", \"Pagamento Autorizado\"],\n      buyData: []\n    };\n  },\n\n  async created() {\n    const getOrders = await axios.get(`${URL}/orders`);\n    this.ordData = getOrders.data;\n    const getBuyers = await axios.get(`${URL}/buyers/${id}`);\n    this.buyData = getBuyers.data;\n  },\n\n  methods: {\n    format_date(value) {\n      if (value) {\n        const newData = moment(String(value)).format(\"L\");\n        return newData;\n      }\n    },\n\n    async find_buyer(id) {\n      return buyer.data[0].name;\n    }\n\n  },\n  computed: {\n    allOrd() {\n      return this.ordData.map(ord => ({ ...ord,\n        emissionDate: this.format_date(ord.emissionDate),\n        value: parseInt(ord.value).toLocaleString(\"pt-br\", {\n          style: \"currency\",\n          currency: \"BRL\"\n        }),\n        orderStatusBuyer: this.orderStatus[parseInt(ord.orderStatusBuyer)],\n        buyerId: this.find_buyer(ord.buyerId)\n      }));\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAoDA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,GAAE,GAAI,uBAAZ;AAEA,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,OAAO,EAAE,EADJ;MAELC,WAAW,EAAE,CACX,yBADW,EAEX,mBAFW,EAGX,wBAHW,EAIX,yBAJW,EAKX,qBALW,EAMX,WANW,EAOX,gCAPW,EAQX,uBARW,EASX,sBATW,CAFR;MAaLC,OAAO,EAAE;IAbJ,CAAP;EAeD,CAjBY;;EAkBb,MAAMC,OAAN,GAAgB;IACd,MAAMC,SAAQ,GAAI,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAEP,GAAI,SAAjB,CAAxB;IACA,KAAKE,OAAL,GAAeI,SAAS,CAACL,IAAzB;IACA,MAAMO,SAAQ,GAAI,MAAMV,KAAK,CAACS,GAAN,CAAW,GAAEP,GAAI,WAAUS,EAAG,EAA9B,CAAxB;IACA,KAAKL,OAAL,GAAeI,SAAS,CAACP,IAAzB;EACD,CAvBY;;EAwBbS,OAAO,EAAE;IACPC,WAAW,CAACC,KAAD,EAAQ;MACjB,IAAIA,KAAJ,EAAW;QACT,MAAMC,OAAM,GAAId,MAAM,CAACe,MAAM,CAACF,KAAD,CAAP,CAAN,CAAsBG,MAAtB,CAA6B,GAA7B,CAAhB;QACA,OAAOF,OAAP;MACF;IACD,CANM;;IAQP,MAAMG,UAAN,CAAiBP,EAAjB,EAAqB;MACnB,OAAOQ,KAAK,CAAChB,IAAN,CAAW,CAAX,EAAciB,IAArB;IACD;;EAVM,CAxBI;EAoCbC,QAAQ,EAAE;IACRC,MAAM,GAAG;MACP,OAAO,KAAKlB,OAAL,CAAamB,GAAb,CAAkBC,GAAD,KAAU,EAChC,GAAGA,GAD6B;QAEhCC,YAAY,EAAE,KAAKZ,WAAL,CAAiBW,GAAG,CAACC,YAArB,CAFkB;QAGhCX,KAAK,EAAEY,QAAQ,CAACF,GAAG,CAACV,KAAL,CAAR,CAAoBa,cAApB,CAAmC,OAAnC,EAA4C;UACjDC,KAAK,EAAE,UAD0C;UAEjDC,QAAQ,EAAE;QAFuC,CAA5C,CAHyB;QAOhCC,gBAAgB,EAAE,KAAKzB,WAAL,CAAiBqB,QAAQ,CAACF,GAAG,CAACM,gBAAL,CAAzB,CAPc;QAQhCC,OAAO,EAAE,KAAKb,UAAL,CAAgBM,GAAG,CAACO,OAApB;MARuB,CAAV,CAAjB,CAAP;IAUD;;EAZO;AApCG,CAAf","names":["axios","moment","URL","data","ordData","orderStatus","buyData","created","getOrders","get","getBuyers","id","methods","format_date","value","newData","String","format","find_buyer","buyer","name","computed","allOrd","map","ord","emissionDate","parseInt","toLocaleString","style","currency","orderStatusBuyer","buyerId"],"sourceRoot":"","sources":["/home/isaac/myProjects/cashforce/cashforce-ft/src/components/OrdersPage.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-2\">\n        <p>Logotipo</p>\n        <button class=\"btn btn-sn bg-primary\">notasFiscais</button>\n      </div>\n      <div class=\"col\">\n        <div class=\"container card\">\n          <div class=\"row\">\n            <h3>Notas Fiscais</h3>\n            <p>Visualize as notas fiscais que você tem.</p>\n          </div>\n          <div class=\"row\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">NOTA FISCAL</th>\n                  <th scope=\"col\">SACADO</th>\n                  <th scope=\"col\">CEDENTE</th>\n                  <th scope=\"col\">EMISSÃO</th>\n                  <th scope=\"col\">VALOR</th>\n                  <th scope=\"col\">STATUS</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"(d, i) in allOrd\" v-bind:key=\"i\">\n                  <td>{{ d.orderNfId }}</td>\n                  <td>{{ d.buyerId }}</td>\n                  <td>{{ d.providerId }}</td>\n                  <td>{{ d.emissionDate }}</td>\n                  <td>{{ d.value }}</td>\n                  <td>{{ d.orderStatusBuyer }}</td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary btn-sm\"\n                    >\n                      Dados do Cedente\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst URL = \"http://localhost:3003\";\n\nexport default {\n  data() {\n    return {\n      ordData: [],\n      orderStatus: [\n        \"Pendente de confirmação\",\n        \"Pedido confirmado\",\n        \"Não reconhece o pedido\",\n        \"Mercadoria não recebida\",\n        \"Recebida com avaria\",\n        \"Devolvida\",\n        \"Recebida com devolução parcial\",\n        \"Recebida e confirmada\",\n        \"Pagamento Autorizado\",\n      ],\n      buyData: [],\n    };\n  },\n  async created() {\n    const getOrders = await axios.get(`${URL}/orders`);\n    this.ordData = getOrders.data;\n    const getBuyers = await axios.get(`${URL}/buyers/${id}`);\n    this.buyData = getBuyers.data;\n  },\n  methods: {\n    format_date(value) {\n      if (value) {\n        const newData = moment(String(value)).format(\"L\");\n        return newData;\n      }\n    },\n\n    async find_buyer(id) {\n      return buyer.data[0].name;\n    },\n  },\n  computed: {\n    allOrd() {\n      return this.ordData.map((ord) => ({\n        ...ord,\n        emissionDate: this.format_date(ord.emissionDate),\n        value: parseInt(ord.value).toLocaleString(\"pt-br\", {\n          style: \"currency\",\n          currency: \"BRL\",\n        }),\n        orderStatusBuyer: this.orderStatus[parseInt(ord.orderStatusBuyer)],\n        buyerId: this.find_buyer(ord.buyerId),\n      }));\n    },\n  },\n};\n</script>\n\n<style>\ndiv {\n  border: 1px solid red;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}