{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid mt-5\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"row\\\"><div class=\\\"col-2\\\"><img src=\\\"assets/logo-cashforce.png\\\" alt=\\\"Cashforce logo\\\" class=\\\"p-2 m-2\\\"></div></div><div class=\\\"row\\\"><div class=\\\"col-2\\\"><button class=\\\"btn btn-sn btn-outline-success\\\">Notas fiscais</button></div></div>\", 2);\n\nconst _hoisted_4 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_4);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;;;oBACTC;;uBADFC,oBAeM,KAfN,cAeMC,UAfN","names":["class","_hoisted_2","_createElementBlock","_hoisted_4"],"sourceRoot":"","sources":["/home/isaac/myProjects/cashforce/cashforce-ft/src/components/OrdersPage.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid mt-5\">\n    <div class=\"row\">\n      <div class=\"col-2\">\n        <img\n          src=\"assets/logo-cashforce.png\"\n          alt=\"Cashforce logo\"\n          class=\"p-2 m-2\"\n        />\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-2\">\n        <button class=\"btn btn-sn btn-outline-success\">Notas fiscais</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst URL = \"http://localhost:3003\";\n\nexport default {\n  data() {\n    return {\n      ordData: [],\n      orderStatus: [\n        \"Pendente de confirmação\",\n        \"Pedido confirmado\",\n        \"Não reconhece o pedido\",\n        \"Mercadoria não recebida\",\n        \"Recebida com avaria\",\n        \"Devolvida\",\n        \"Recebida com devolução parcial\",\n        \"Recebida e confirmada\",\n        \"Pagamento Autorizado\",\n      ],\n      buyData: [],\n      provData: [],\n    };\n  },\n  async created() {\n    const getOrders = await axios.get(`${URL}/orders`);\n    this.ordData = getOrders.data;\n    const getBuyers = await axios.get(`${URL}/buyers/`);\n    this.buyData = getBuyers.data;\n    const getProviders = await axios.get(`${URL}/providers/`);\n    this.provData = getProviders.data;\n  },\n  methods: {\n    format_date(value) {\n      if (value) {\n        const newData = moment(String(value)).format(\"L\");\n        return newData;\n      }\n    },\n\n    find_buyer(id) {\n      return this.buyData.filter((buyer) => buyer.id === id)[0].name;\n    },\n\n    find_provider(id) {\n      return this.provData.filter((provider) => provider.id === id)[0].name;\n    },\n  },\n  computed: {\n    allOrd() {\n      return this.ordData.map((ord) => ({\n        ...ord,\n        emissionDate: this.format_date(ord.emissionDate),\n        value: parseInt(ord.value).toLocaleString(\"pt-br\", {\n          style: \"currency\",\n          currency: \"BRL\",\n        }),\n        orderStatusBuyer: this.orderStatus[parseInt(ord.orderStatusBuyer)],\n        buyerId: this.find_buyer(ord.buyerId),\n        providerId: this.find_provider(ord.providerId),\n      }));\n    },\n  },\n};\n</script>\n\n<style>\ndiv {\n  border: 1px solid red;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}